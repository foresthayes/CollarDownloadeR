% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_urls.R
\name{cdr_build_vec_url}
\alias{cdr_build_vec_url}
\title{Functions to build the url required to call the API}
\usage{
cdr_build_vec_url(base_url = NULL, collar_id = NULL,
  collar_key = NULL, type = c("act", "csq", "mit"),
  after_data_id = NULL, start_date = NULL)
}
\arguments{
\item{base_url}{NULL or the url to build from, the default NULL should
suffice in almost all cases}

\item{collar_id}{The ID(s) of the collars to query for data}

\item{collar_key}{The key(s) of the collars to query for data}

\item{type}{The data type, poorly defined at the moment}

\item{after_data_id}{Some data types have ID numbers, if you wish to only
download data after some data id then supply it here and the API should only
return data with an ID greater than that supplied.  Must be equal in length
to collar_id and collar_key.  Only one of start_date and
after_data_id may be supplied.}

\item{start_date}{A date class vector.  Supplying this parameter will cause
the API to only return data collected after the supplied date.  Must be equal
in length to collar_id and collar_key.  Only one of start_date and
after_data_id may be supplied.}
}
\value{
A url as a character string
}
\description{
The url is composed of a base that never changes, a collar id, a collar key
and data type at a minimum.  These pieces and the optional parameters
after_data_id and start_date must be put together in a rather particular
order with appropriate punctuation.  This is the role of these functions.
}
\details{
The functions cdr_build_vec_url and cdr_build_vec_urls differ only
in that cdr_build_vec_url builds a single url from a collection of length 1
arguments while cdr_build_vec_url will function on vectors of inputs to
create numerous urls.  Functionally the user is encouraged to only use the
plural version so that code will function regardles of the length of the
input.
}
\examples{
cdr_build_vec_urls(
  base_url = NULL,
  collar_id = cdr_get_id_from_key(
    system.file("extdata", package = "CollarDownloadeR")
  ),
  collar_key = cdr_get_keys(
    system.file(
      "extdata",
      package = "CollarDownloadeR"
    )
  ),
  type = "act"
)
}
